#
# GRAKN.AI - THE KNOWLEDGE GRAPH
# Copyright (C) 2018 Grakn Labs Ltd
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

version: 2.1
commands:
  install-bazel:
    steps:
      - run:
          name: Install Bazel and RBE credential
          command: |
            # Install bazel
            curl -OL https://github.com/bazelbuild/bazel/releases/download/0.20.0/bazel-0.20.0-installer-linux-x86_64.sh
            chmod +x bazel-0.20.0-installer-linux-x86_64.sh
            sudo ./bazel-0.20.0-installer-linux-x86_64.sh

            # Install RBE credential
            bazel run @graknlabs_build_tools//ci:install-bazel-rbe-credential

  run-bazel-rbe:
    parameters:
      command:
        type: string
    steps:
      - run: bazel run @graknlabs_build_tools//ci:run-bazel-rbe << parameters.command >>

  run-grakn-server:
    steps:
      - run-bazel-rbe:
          command: bazel --host_jvm_args=-Xmx2G build @graknlabs_grakn_core//:assemble-linux-targz
      - run: mkdir dist && tar -xvzf bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
      - run: nohup ./dist/grakn-core-all-linux/grakn server start

jobs:
  build:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel
      - run-bazel-rbe:
          command: bazel build //...

  test:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel
      - run-grakn-server
      - run: ./dist/grakn-core-all-linux/grakn console -f `pwd`/tests/support/basic-genealogy.gql -k gene
      - run: bazel test //:test-integration --test_output=streamed

  test-deployment:
    docker:
      - image: "circleci/node:9.6.1"
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel
      - run: sudo apt install -y expect
      - run: bazel run //:deploy-npm -- test $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD $REPO_GRAKN_EMAIL
      - run-grakn-server
      # upgrade NPM and run tests
      - run: |
          source /opt/circleci/.nvm/nvm.sh
          nvm install v10.15.3
          nvm use --delete-prefix v10.15.3
          cd tests/deployment/
          sed -i -e "s/SNAPSHOT/$CIRCLE_SHA1/g" ../../VERSION
          npm install https://repo.grakn.ai/repository/test-npm-group/grakn-client/-/grakn-client-$(cat ../../VERSION).tgz
          npm install jest --global
          jest --detectOpenHandles application.test.js

  sync-dependencies:
    machine: true
    steps:
      - checkout
      - install-bazel
      - run: |
          # sync-dependencies for client-nodejs relies on //:deploy-npm having been called in a previous job (test-deployment)
          bazel run @graknlabs_build_tools//ci:sync-dependencies -- \
          --source client-nodejs:master \
          --targets docs:development

  release-approval:
    machine: true
    steps:
      - checkout
      - install-bazel
      - run: bazel run @graknlabs_build_tools//ci:release-approval

  release-npm:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel
      - run: bazel run //:deploy-npm -- npmjs $REPO_NPM_USERNAME $REPO_NPM_PASSWORD $REPO_NPM_EMAIL

  release-cleanup:
    machine: true
    steps:
      - checkout
      - run: git push --delete origin client-nodejs-release-branch

workflows:
  client-nodejs:
    jobs:
      - build:
          filters:
            branches:
              ignore: client-nodejs-release-branch
      - test:
          filters:
            branches:
              ignore: client-nodejs-release-branch
      - test-deployment:
          filters:
            branches:
              only: master
          requires:
            - build
            - test
      - sync-dependencies:
          filters:
            branches:
              only: master
          requires:
            - test-deployment
      - release-approval:
          filters:
            branches:
              only: master
          requires:
            - sync-dependencies

  client-nodejs-release:
    jobs:
      - release-npm:
          filters:
            branches:
              only: client-nodejs-release-branch
      - release-cleanup:
          filters:
            branches:
              only: client-nodejs-release-branch
          requires:
            - release-npm
